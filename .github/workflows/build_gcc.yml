on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 6182a284960a850bc5520337f51799d015538c67, 255d22ea90eabb7d419bf15cfdeb5a7635fc20af, 532d74c192779e1d0462e207cbfcf7f5db0c249a, 46eb2b751f1cbcab35972e57abcecc31b13d0889, 0a0b51c5dc0453df4876cbd9c4e528d1faaf37ed, 04877f1096b9afe9d27552ffd0cc76388bbc6c03, 68a0eb254f6615ae53f7c9beb383fbc883857bc4, 582accedb77b7b957e1322966a0875491156d13a, 1ca5d5f84c96bb9a47eeb1bbdeb7ae695f7a759e]
        #latest: [bee0c8a1d4263754feb2271f50bbb7a5819ae4ff]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
