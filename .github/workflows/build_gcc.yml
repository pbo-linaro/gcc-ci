on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 578068682130e6a438ef2c43692a51415fa1e6b1, 1213bb4686cd75643294d35619c97801fccf4810, 8ab098a790f46b2bb7ca1d57cb29deaee541ff0e, c84a5c616cdad17a3470e02f20d0caa8743f340f, e5f3ad0fa1955dc83b59d46a92a76507ee3855a2, 4e71511a676368fc40dd0bcec7d7082f41cd8bf7, 7b6c52cf4ef53d4f4816cbcd7e086daa1c872d29, f9b0ca04c88bcea93d9e80f2c98089da7484f0d7, 9c99d52d00a941f48d93ae116cd425440bdfa5b2]
        #latest: [6e2ed1e1efb18aa59c1856be20c3b16c753d617c]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
