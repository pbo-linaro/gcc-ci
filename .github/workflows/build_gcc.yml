on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, b503080cd219b8f05184f6322d943d1c03f56b08, 5138ddc3d652b66d3292c1543c34752e9ed78fc6, 10d9514c67ac76963feb4e8cd2310a63d2519b8f, e5183f0e4a0cb2ab5ad0b6008c1d09aca303b246, 9113e0760682d809fca60e9189c1721e4acf9c6f, a4bf0b62a6b854df9ebcc54c3802536486852eb1, a091ce015fb257d40905e8ca9e62b285c53fcca5, c353758f7e7152898315b0f9a3329d464fa82a1c, 4756e2ae8d66ad751b5b923fa2314f650a052ba8]
        #latest: [635a63c032491f6da2c82d9fdac0b2c8c020d68e]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
