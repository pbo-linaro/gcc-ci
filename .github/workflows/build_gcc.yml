on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, fc0aa04839ebb8ca014b3ca3ca20b248c18f1073, f34d65dde655310a7a24bb290052d5180d49ce6d, 05ef8df6827f2528ff81a0faec9054fdd5a103ff, 1ecba694eef9ea63e7412491ca753c817bb9d1a6, 67d50818a7f0f06385d4635bdd96614cb542c5ee, b8ce0e28a0114e8a253ab205189f7cb159218a46, ac88cb00f73e7d3d3dbeb210b7e9e9d129b69952, 33db2ab974139b01a00bcda11eeb2c9d322e6b55, 005e4febac01b9e92465e17bc4847e7ef955f0dc]
        #latest: [2a53f37997ea9d11e9d25d989d254d53614a883b]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
