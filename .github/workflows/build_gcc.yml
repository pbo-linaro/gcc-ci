on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, de83e69bb6ea300206eaf5a0cd2d365f2444f4b5, 6ad3f1fa575a1debdaa6a41f698d71c73f6600fa, 1346a7652e8cf70b54f0b12f6844f0c929781c2f, de7e34bdd6c62294831d867188807216e186ed03, b190aaeff7b4b6e3b96dfe0b5277ccc93ccb9973, c0763eac05f6e8adf05a1d94fc80ded1a9e14f2c, ce09474789d6e6df1b2b921df84c27db80fe02ba, 8db58652d87e3b3bd208aea8f3aad14427780f0a, ea0bd46eb863542f965b93a8bb02289ae9dd5ac8]
        #latest: [1a02c452a6496c4f75296f0ee5669f0f9befaee6]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
