on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 90effeedc48a187831ba71cabf616650c98a011b, f5d02c4f5592b717a3aad5304308df913bf4ab1b, dfd2e26bda189f573d40eaf1f6b5a44180c31640, 4a71a18da8a1ea731ad69c34771bd6ee1085cc64, de8eed9b8efea12d5b7987206e8e9fb0109966ca, efc6c1aa3c8e78e69b96ac0240b3fb46ce8e284e, 014dd0304d9d2f0f32a390226470be4a876e903c, 7e96bfe42867757c35069f2c18abc92c41af0e6b, 1af4d0e6078e048b88aa5e1547cf1e097952b621]
        #latest: [9fc94c1562dd69508d7483d236b352270e0d6e3b]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
