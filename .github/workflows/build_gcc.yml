on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 422244101eedcd216e209e98ada698839de45aac, 546fbc6289b43ed59fc18d353084faf53c5bcced, 56e29f4d5de8134db5f7772adc13154f3efccf43, 1b34e40e5e41bdcb227b40523cd3a64c6f2fde00, fc281773251e2c565c0fbf3872d240615cae021a, 10d501fa9b781c571db4ba4c27033b21b3dee422, 7d9b2a8607f1efda97be89917b36b4cd467904f5, 0096df08e0d792880dbbb37dfb24f928183bab9c, d3d751cbac030902014856bbbd310a90b02912af]
        #latest: [e07cb0b07d50ffa6b8533c4e0f65b6a4829d2823]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
