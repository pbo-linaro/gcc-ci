on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, eb241224a9f63afc92dcd744d74de8a8ec007f95, fc91e2b3c68621a7315621f46445322835b2316a, ffadba42b3022855db48bdd94e0c95a8480bc278, 0da798e3666af22ebdf58d39198acff1de71a33b, af1a05fb37e2f5ed0ce38aa92324c5492142e7c0, 600d78c65ad61090f9b459718d97a4ec3a3a759b, 93866b6a930170302778d23e034619c8f669547b, 2e159d9d0c06b9e5e16e5e1e15103f461761237c, 087ed58311d5831aa32088930e7b3ae3aa5a40a7]
        #latest: [75763b4c50e6d1ffb8cae6d34d5ffd40add1f8d4]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
