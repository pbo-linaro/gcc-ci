on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 49eb3f5fc662aa44d1560e9061b33a8c86da958f, 86c070baa8612e5ac2c8a7ccfb03d50e940a4858, a2605b5a49d109370a21ba57c545cecc8cd9694d, a79920c2d6d998bff506edbff6c06ebb3c7888c1, aae0830fbf1cfeb8f0014e15c2cd2cad54c31afe, 18cd9a240d6f0b9e424a4b4c1bd2251ff85e9b2f, c1da49edb8e8318c91bada12b4b28f25b10dd1c1, 3ddfc58b25b12df7c617b9218ed38103fe393c35, 0b48fddeee8497369d39dcd5904bbf808cb52bd3]
        #latest: [4756e2ae8d66ad751b5b923fa2314f650a052ba8]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
