on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 4ac118445077fca5153730740d7233b055821746, f1afcf9fd5e85722766a803dac6c9e6bd90161cc, c7805016c877680238a80c2318c6366789fb521a, 7d59ce850c10c2162e54b4f115ec0cb34536d8e7, 6925358a440bd9dfb33dc79d8f345530b4cb94cc, da450d345c948d9be1fca29d01fa1153c2ddf3bd, d41160ca9747e085e28130c38ec04804082a45e2, a77f3c3b3655a2c7a0029887f9ef47b4df7b91f0, 61e8ba9015a734ee6c9a12eec4764a1f73d130d3]
        #latest: [663c4102a8ad43ec409e04d5ab834d38f161bdb5]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
