on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 94f2a1ce4b582e250b8a760a2acdd77cf98dd454, f395ed80cea4d2bd3c57bf6f52cac9f2b7f4c0d3, e8c656ff6ea34d2f6a8bc695d43c8f89281d6543, d2c9c8cf393b3646e6bd4e9d74b33fca31d38dfe, f4b2b28f325ef693f36776168a40152e9ce6cd34, 6a569f5c6c0e5da5ff68d94b132d4305bc999bd5, 27f298c1dd820de9c441eedc3f3ad519da1dea8e, 747d9a92ddb74fa7ba1bb6ca0079abd5eaa38791, d9473a5b55d512658b826129ef8bed57fe7d0d73]
        #latest: [0b48fddeee8497369d39dcd5904bbf808cb52bd3]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
