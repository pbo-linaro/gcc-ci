on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 7e74b450d24074519c8c93dc55c507931b329c5a, e3360d2ba200e334a320cb8d49257e084b4e5233, d31b401c8cd72a1c81c9be489a1f4f54bd6850dc, cfb98788f0afd404dcc6d675c8b8971a8a6b1603, dd73caa394b1c08f11c7af92e323838f9eaa0348, 37451ad09f7edc081700909208f90b9eea1eb592, 4d5f20fdbf095663ce829b42a22819093f4efc8e, 5920e4b7579c664c17a07d126c7fb09f4d786849, 00f79c773bc247830b29b6cef02d89337123c167]
        #latest: [1ed62a2be747760de4f8902c7f17ce04783b9bed]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
