on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 23aa4bd6c27a47756b10e6f3b73667f5a965b232, ad14f866184f91afa9a0a6e73ee14b06ce017037, d991a3f15f64d3a16cce0866508bb76d87b9627c, df1da36415bb15919551f1b813443057263fc187, 8288dc0fedc2fd227b9cd31c5e36ee39839689ee, bcd76dbcaabe6752657befcd8f4fec4d53126fd2, 2327631e4ba359fb43a6a46bf2771ac5ea441d8c, dcba437a8223ca1a88a59e8286fb3565bd07b445, bee12555414e19c9cbeaf3b7550f9f93e939e392]
        #latest: [087ed58311d5831aa32088930e7b3ae3aa5a40a7]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
