on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 73ed16c0f8bc157bcb905e87cffcfd616ee7ea04, d264dcc70c4c3537ca350d12855fd29687759041, 1b810614f1e4488b6f5c53a6d195fda51fb5a5e7, a92d1cc9b51d5b708b1c4d1cb409cf6ee8a29f38, dd8fb58695f752b04acf3c934f9f0d33d0e0d75f, 8b7ab6f2f26c78309597f998c768e4e539db75bb, 98142ce7cc4522fd9dadba0e458905611e5bacfc, 829785bb69adf0993f516cc6cdbcd066f7ca130b, bee0c8a1d4263754feb2271f50bbb7a5819ae4ff]
        #latest: [6700154ff7ef970abf305eacbf3f6e0feb19133e]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
