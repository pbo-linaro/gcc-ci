on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, c6f1b887e8f52ba6252ad83e03cbea41af326f6e, cf046027a23df64ed46ade5ae4a5c9d77ea191ab, e857a3b67905628c97360df77f8f2c8456e4e7b9, c9600aa54d7412f5bbff97be2046c8054e201c3c, f91d7d39067de97adb5c67f052daa2dcd27f3cc6, b90dc2bdd23127ab998f352eaa592d7d052d8d64, 0a0006806086f9c5b68dc82253ebbf5fe264330e, 5c8941ffd6025f713913bf8564308383c9f3b093, c010c77c47964f0d660bff1313a57cea565b8506]
        #latest: [af874e4bcd601e2fac3598c122641db6f3b1d95c]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
