on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 18464d32dad7296a370bd8ce6746eac32e00ef52, 06af44ece16072c7078c1fee283108a12c963ecb, e4515c226d5e97bcc68383426cdafbc054df9ac5, 75853fdd29499cbe5e532f9472caefaa61ce4a69, 4ad44eae61457754cb0249bb6df24cc33f684163, c0b25c9a3b25510d47cdf6b37afaf208c00a1c0d, 0ae1af0eb31d99f4cd5ba05a199770aeee764567, 87ccd32da00e82584215c759e80bd092003c9efb, cdddf7baff74af1542788868d1cfab6dc435f2ef]
        #latest: [4459962a83ff5c5b6f3d9f76cb8b6c7a71d300c0]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
