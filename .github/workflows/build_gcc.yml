on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 1dcc60c25c29a1e35067dc89d1be7fae7d06da5a, 9d8da7d12642440de699fb744ba6f493194da741, 44e67ceee62cf08dd2e02886c3379263eb7d64e3, d8a7cee1ea6469615dc06d5d786182a279042637, 21c46e84e8b461a2d80b6fb6c2a006a8552a52a6, 08ac705b21542b064ebd95b71405281d14192fd2, 5802178519f68f75838ac1e26fe898682ce70f54, efb24f60a818a8bec65a6204de9bb7f6866a4539, 88c5d5555530b6dc54f5aeb3dc5735aa8153a602]
        #latest: [e2b0bc4a02379b93175d266306ebfa7900a84766]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
