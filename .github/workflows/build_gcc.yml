on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 83e9ae73f47d6965206d6eee64a4550dea0a8a6b, a2bb344624612c64bcca4683a760da81911030f9, b6a783c4815703ff231cf1708ec1931d47ad4202, ddc51b22bd8fff3a667cc9429aed5dfd5a6d9777, 766b6fc0c7d510e80e49af0fb85a23492aa42675, cb791a1f72ce2cba815d880883107ce26d5f8d66, 2bf0087065b5b727bca77962b4e4a317cfbf5f6c, 1d28a62a0d75be55fd08c7cf163825d1b7caf967, 671517fc2e28d7b3f8caa2d2d1b26365285d3d99]
        #latest: [84a14f3d88f2568af7922c47f43960bde3904205]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
