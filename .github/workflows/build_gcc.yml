on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 3861c44c7e7050685ee9a5f1492d6b678b1586d6, b134f7d50d7312a5cbc3c424c0b8c6c73b3b6028, ac01179b4711efd702a9582fc142f584f660f588, dc92981d06a8695bf589a1fcfda427a38265ebee, f821a019e624555397b539e864cc145057922a63, 265d8555fe3ad38755e64a6b9880521c7f3a3cc7, 4622e12040e585cf48f4a2d04e820b8d3506c983, 3b61fe1d507bc8a2197b2ea0e87ccda943ed4aa2, ebdc961f811262a5002760a0af6d15a2a0357fc8]
        #latest: [026c1041dff50ba5287deed0e8ad64bb787a4bdc]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
