on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, e302a55c6a71de29e1d1d4e503490f28198eb59c, 3d0684b2c241cf13740b8bd421a84027719e554a, 8bc4ce7c40be159c83d623beb4cb074e1b5b0daa, 946af759bdc029c1bbd3d6349ad5f80098bc30e3, 4476c9a8e386575c272c96a7e9383b011f273d77, 5189a22a14c99b9d56c4ce14d7b4d8206caf8dd2, 97bc533c525629410ffc520170c950af69490afd, a7d480eef4e3ce9792f2c714551b656b7278d31e, f1dbdb63dc78378aa91fb9e8bc1ff9401ef81c42]
        #latest: [61644aea34c4623d16273ff705f8b8b1ff2d87f0]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
