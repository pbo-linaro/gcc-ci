on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 060652cdd8b1fda6d108c87f421e78a885d5c173, ba5445ad7ad438e84004aa5da6c15bfc4cccf2fd, 895729f35b566a880d92ce4756a16f1265a41907, e6ff2bcc3a6107ecbef6e744c42f5e9b1b007dbe, 24ce9baa6d9460752174db5577a751ea1964ad04, 312a861d86147327725abae14fd46f2074b0dcf6, 3df5ed955d338231ec896462b658283c46d31c60, fca49c4d4a19c88bd6f3f18d27a56047e4a9bb80, cb64096940cca23dd63f49315fdc1fef7e94b569]
        #latest: [2b6d2e1d5a57ce26c1cf65dfa8f099f2471d2fc7]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
