on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 221281052df7f6fe5f742f5029c262d22d45031d, 8b8701243c280559fa8d2426bf8fb0b13d1f563a, a8a27b074f40cbac16af37db4c03a1128ce8f201, ff8647e88f6c09c6c699b3443de07bc5f7e0742c, 3e3f2ee1932fc30edc3236b0a31816f8e933d816, 73b6d9b91ce50763a21552d54346d95aa1e0eb9e, cbbe80d61ad970a35b68e23f78676b9197bae22e, 4679d129fcc1c52aeaff945cc5aed519b27a2826, f5d4d756d8ea306811b5527a9a569e981d3a9f08]
        #latest: [f8770d18f595ee6c533d49d330b0bfacafcbbaf4]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
