on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, d2b4ec9ea3f02793bf837ead78a7f9331d6f9983, 4b887e59ace4fb95cf1ed9cfddd070e74512d735, 9dadc9ccddacc984dbbad1f2cc6fd12ee63fee01, 27521a2f4f7b859d5656e5bdd69d3f759ea4c23a, 45a22144bff4bf34e07506405f9cc0825d656465, 8b447fa89d5e6b052c9309dfd1dafebdbd829ff9, c224dec0e7c88e7a95633023018cdcb6ee87c65f, 444a31f3b3542ccbecb67cef3a01df8aa9a43802, c48bedd180672276cc58f379a6346309366b7ea7]
        #latest: [a52fdae91d42cbd0d1539fe1bf42823e5537bde4]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
