on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, dfb5c1482892cd4ae1330fc1d152d45a0e6bc702, ac0132918680200f265bf96fe87644a2cb81c22b, 9761160120e96c4507e29f626f3333e0a97ab9f8, 1bc67e50e3f77081e5593e7c5e77ed3a2a816755, 1a20b5b1165f43ac9db6cfa62afe91031c2a717b, ecbbfce5c566526b0e1eab5c9b9b1676c7dc450f, 7adb5516b5825816ff1883c23d1ee33982043fcc, 75c8724897283cca386812a7b4755e5a541e7e52, f4f50c7ce902afbc46d192963237c025d4c721e0]
        #latest: [547a27922a63b2add2bff6bd6807470df039cc6b]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
