on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, c1b343da33fe7038522d7c0f28b7e061707ccec7, 8c465d5fb09d1c7769ba4d9ce641e3e7c261b528, e9ced4a3a581fd06e9bd6c8862a53607b4395f34, a21a4bc8947b628512db2fa00cdbcea883f31deb, eb95910feee269f71cb4ab4aafbf1beecb2f9993, 71249c646b77a73002ea9f1061c492c76ac5bda5, 82387cd8a0e70c9ab791ebccf26290907cf0d217, a56f04dec3eadfd4fcf1aabce00245147646d5aa, ec5f8090a17dede3165650b0db362afbfa5819e0]
        #latest: [c010c77c47964f0d660bff1313a57cea565b8506]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
