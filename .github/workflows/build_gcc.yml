on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, fb2c17fc1f2cfe29ef0fd90ae8d36141882fa95d, d93a1f032db86fe602566a6868b9bc5279554e71, e7312c67a713ff2686b11d689b11eb94d5a88581, cd73752ad6df6dde49323e0d5facb87dce70fff1, 7d8de1ca4a78ec7bf9cdd7e5cbe9d11bd2546efe, f2df348dcd5c7ef51e5a686a4d2473ae9bbb36bb, 694063d84e47f57c99d4558e789932c31a7bf6dd, 197962cb062edb41538af9f5e9b4c02f090c4ba8, 635a63c032491f6da2c82d9fdac0b2c8c020d68e]
        #latest: [d88234af9ffa2f51e498dc518ccab8b1c293a148]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
