on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 8adfcf712160dbdda2cf506c54da291e00afb010, 97612931b1324a2b320d047146f48d26d071681b, c3462989ec4755e1a1d9aaa6364667927112c413, ab0e27412e3ae4de957c33a267f27a87ea41b4e9, 2099a757e22b8cfeebc8b40e06c071dde201b3cb, 95103ba9cda60274c4402fcdcb625b3af72cbb1a, 449d3f5793dcf5a92d551daf7dcf6516aec7dfa8, 1346d20dd5548bf45fd39d94526b44611bea671f, 3480ea7a05313f30e827f47180549267389387ec]
        #latest: [ec5f8090a17dede3165650b0db362afbfa5819e0]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
