on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 3b8ffff2a46a7c821207f720986ccfbd6a676ac1, 6d169ce149a3af1d50ea36345a4e26805535a989, 8f98348f31afe8e005eed9cbf776e286869816fc, 7d6ef248a975228885cdd32a6bb3cf513acccf5c, 5130c17766bddac0ca8d60a92151b2817aa32ae1, b9dcaf8ee7ecac7bd8c2f09d2b4712fb96721386, cef9bca143a7415d94330f2b6d9249581920f6fe, 7e7cffb709def41f3df115d7be4ce86b466d5011, 2163af71247b99e8fd707e5d6da83d14456e02a5]
        #latest: [ebdc961f811262a5002760a0af6d15a2a0357fc8]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
