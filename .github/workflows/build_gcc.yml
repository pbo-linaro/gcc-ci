on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 7017e9de8209c18bbbb8664dca14e3ea04e4156f, 4c77c7ac0f2ad11e48a32d7a98b3ca1005df8678, 4516631ae20f9dfc8cb7b795dedda85ab11a0db8, 9c4beccae3cf6e43deff1c08b8e35ac39ccc7efc, 85629837c7d2df221a5b6c5035546658ed69c82c, 8a8436aa6a63dbfdee6c18f2b9533720b83f2624, 525110ae4951fcc1ca3e858d6afa23823b79b8f0, 98b83ea8a41763d1a760a79a27132fbc610b93d4, 1793dec6639c450edf1a1e227faa5ba2c69d4eb8]
        #latest: [49d5df4c826e14beaa9ee4c01c8fb710bd81a7bb]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
