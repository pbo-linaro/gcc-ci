on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, ed866110ef0f90f24c60a91a7141565b706ad185, 987a411d409fac53041033979e12c404a8995e93, 865efbdc2f195b7a9c9cfcb1d3c248c315eafeea, d686ffaf26b3da16d1ea6e61f88f0a546bb33cf0, 80c68893f446bf883c67dd78c317b5c0f0f55f4f, e99e565e0aa866cdec407f851d651096fb190f7f, dd15fff38562ab8c3160190366f1e755c033425b, f00f3837ef1317b46a6b1a458140e98d0d18fd4d, 973f4088efa74e3c181169b77c22358ae179d4d6]
        #latest: [00f79c773bc247830b29b6cef02d89337123c167]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
