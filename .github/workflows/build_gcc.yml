on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, fb3eb13f0f866568f2de799e4b93b704aa02f3d7, 25c9921b1d9bd2c508c1ac3c89e2e192a17b6f8b, cf1287ee24c5c83b38737c50e3cd37ab62f3d279, c532c201b360fcddc84f687e795248c132ba4787, ebbb3d2d5f74f4c00132df085fe7829abba4fe1c, 12dd77c19fbcf2446a895804848ffb498e0d3688, 24c864405273843fcf8bf30c4efc400890b46e1c, de9c1ff6d590c871eda5fe0da56efce0735e81fc, af874e4bcd601e2fac3598c122641db6f3b1d95c]
        #latest: [1ff234bffdbd1e25636e2a382c8400fb1702ed13]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
