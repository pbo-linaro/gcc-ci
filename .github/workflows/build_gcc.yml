on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, d3057e69654610ac258db056db6d5282ec677642, e40067e4f75db03b7493aa6df8afcfa2b645660c, 3d9f8ad29181fd4018228de530a03504b53ee0b4, 599d5d9f833a2b9dd88e34a77fdb3e43b146a50a, 7ec57f2e7c79a5a99bef7613e6c9b957711a887e, 2bfd2350ec73b5ce99720db1d9b682d130424c3a, 385a03ae32dc22c1404723bfa7a5d33ec1e02e2f, 0fdd53beb188bdaa30dc07de9a247e5a1e666767, 026c1041dff50ba5287deed0e8ad64bb787a4bdc]
        #latest: [f0f04b256ceee2c8d7a24f0e0fcd8a0894fa48db]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
