on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, c9534eb5d93dcb8bb567def37d42b8dcabcea426, 2fa0bbc3ee6551e1cf67408ef2ce7673177303e7, b44757f8360c44bb83e45bf7a0d5dc10ce4f4916, 98b779a83cbbbe87e2aad76d230b6c8674645943, 269870741990b742d3a9fa57af8e0ae709e68bbf, 14ab22c46e8dce09c7f19883f510a386cfdf2e9d, 315e267e8be68acd710c8868ca2ba7433d70239b, e755e6e407be2ed3d6d3d93a215a9237c681026d, 8e8c56392edb2cdf7d61672dda609bbb6b5941e2]
        #latest: [d9473a5b55d512658b826129ef8bed57fe7d0d73]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
