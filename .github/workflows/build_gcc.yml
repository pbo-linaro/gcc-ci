on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, ace4b8e7f9ec6ba47d581be486970609de13e0ae, c8ec3e1327cb1e5f09f51e11053400803754d614, 84d713f6f45bef44b8bea84b02caa8a165bff1b5, 2bd944af54570e3151839b90dc37f5ca328893d6, f06c6ad3174a381ba89046313b6e5b401659c81a, 221912d34eeb42ada3fd5b4afdf72d0b4c85ee03, ccf041daa73fb9f28e8b27ce579960a5718af0a1, 2a0e91d6c1a6c93a248fd947115302b668d97e8e, a52fdae91d42cbd0d1539fe1bf42823e5537bde4]
        #latest: [95440171d0e615b0a1aa6863e41ba30df86ac3f4]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
