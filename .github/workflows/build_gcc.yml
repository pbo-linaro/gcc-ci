on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 767a227a34b2dbbe32b653b183bed98d40526762, 5104a38ae8563f011934452dee7f7aa3c89967ea, c4969068c9456b2559b3a7d056992177b23dc310, 2046aec032f743023a5e353735255d951e2e54d6, a042b4954051709014d88a814185e4d33ba3afa8, 7fb5366831a2c3e0a9401b3deb3e453be5a481e9, 664e19ac6c839b0984e74a9861169422e56d840c, eba557860627a8ce1bb37d1427469db99cb0c059, 3e0437dc981af591f46234fd2e3aebb3c60028cc]
        #latest: [e1af468856241e339ad4f7b6c5af68d033b34b4c]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
