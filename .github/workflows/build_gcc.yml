on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, d43bc24b0aed965d6c2c13b94f2e3414f2e88671, 4306bf12227d62ebcb8b2d9c3d570be8e4b767ff, 00b8eff7bda39ebd7ca9e278c33736f7f9e09994, 24c4394cc4e3a5aa4f455763a92bd2e41412bebc, 232377f8575aa0633e87928cdd6269259435635b, e67500111dbaf97b954a9733f3221ffa5413eb6e, a313761b2f506093b8ed8134338b935f968ca380, 0d8c98f7ff59bccb168e4b93fb55f2d1d22c3f44, 49d5df4c826e14beaa9ee4c01c8fb710bd81a7bb]
        #latest: [f5d4d756d8ea306811b5527a9a569e981d3a9f08]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
