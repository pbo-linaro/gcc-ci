on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, c12f4bc804aea07f0e9cb510c90b6cde1f0738ac, e659eca9f3b9c167c37a7862cb45d996fb784a6f, 805cb985847ab6fec91081ee625240e2d9129a1c, a229fcbf6565a2949d6b77e401d6df7a52f89d70, 8b089cb58ad94ccd14347c27d36408cac2c73de0, 686653b12201656c5ad2a67833ea01136d555ecc, ded9de82c10f8783a4f2ec52d2930bad07b32468, 0830ce0813e8fcac793b210ce2715712b109ce2c, 75763b4c50e6d1ffb8cae6d34d5ffd40add1f8d4]
        #latest: [9c99d52d00a941f48d93ae116cd425440bdfa5b2]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
