on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, f26df74ce3c20a391bb1e23aded851f971bca585, c24d0e9033df80b564e7e72803195ad10c1e4221, 619f1874b0ce0edc68b2748153b4134b2db306fd, b2234633dc075953eae50f2a30b05e25e191f7dd, 55cf783df81fc1ee088e7d32ae100eac6c7a6fda, 9f09284d8fc0a218e6fe936591d4ba35f716408f, 2b20054948edca024f871a04c38c1d6ccb9c0bce, 2952785b1622cab80e95ee3922aac50a113b162a, fa6bba6f220882a29b7a9e020c49043a3a7e869b]
        #latest: [77fbe55f8e68a2fbdff00500faec32f85e8c6d74]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
