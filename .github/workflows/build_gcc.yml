on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 9cc353d75ab97a4461c707d504e595fc3a8e2ecc, 886d56d0c54ec73cabae64558f63e7963c9bb90a, fa13cfd08aff3bfc2d119c1727f6107e91774eb4, 4d630984512b6b79d9412378301ae777411685d4, 46a5df00ab59a9bb816f5865efb9196e31bc18c6, 2b00b13d309f600fee94cc911a99362e0451cbaa, c533a11ae05bae53e4421810f7108aac697ded4e, f84d52a5173c1b432ad07294bc643dc5e8d53bdf, 6164ec07c64f9ceb40fc5f4f6efb5c0f836fb04f]
        #latest: [55a3049525498a4c06e47c21c15f6b3d6eb1be29]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
