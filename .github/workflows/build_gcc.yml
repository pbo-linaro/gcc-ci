on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 3381f522f206f3b64a973976f422b283dd9f49e6, 497632d136c6930fab94709e03b48a8a6735de3c, 69a64dcb20e0da87c849a27148e1599a6f4d72e8, 162aecc7b69d10204be0e92467c58468466d81d5, 0770c239f475ed2ae25d96175019865156db516e, 0ee16a42074486d6514379d7faa6aee54100f0a4, fcb228d1232820a1fbf63f9f366630067a13a432, 5373b8e66cc66e0691e60ec7a2ea633ca7e5a9d1, 84a14f3d88f2568af7922c47f43960bde3904205]
        #latest: [b3b3de1082eeeee73fec1d27ad732b8369ee1d27]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
