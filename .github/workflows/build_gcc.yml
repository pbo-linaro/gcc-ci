on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 048098d44462aa79d092ed23be5bffb4f77b1874, 299a2459663eeee17adebb4de9aba44e7014d775, cb424c7229b688efd11465a8565177810c3fc255, bdb4e2930ecbb96289819833c495ac59214b38b5, 8bc2a3e40e86a6a125c985f05616537c130cb2cb, 072d8e660bbd0996f5b2ff3567a45c9876986052, 381a599ed11d2da8b873abfe648b8f97c9dde738, 721bc1b926bbcd019bfdc19b626b3db45e8b01c5, e2b0bc4a02379b93175d266306ebfa7900a84766]
        #latest: [f4f50c7ce902afbc46d192963237c025d4c721e0]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
