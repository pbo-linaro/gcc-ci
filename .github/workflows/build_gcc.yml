on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, e22e94ddb62cc83c0f1c8b81472aa0a05c1f8850, 73a2f1b4d64dcef17aa26a82a6cddc41ad8c87ff, 00539210bfad17fec1ddc0bd55b213ef3da0471e, 77cd54e9dc3fae65d47d2f7c375c74cab362a0c9, b67124f2592096178c55ce6fbd2c522385c29c54, 0f15c111397bedbc0b01c65aa9cb477d65af53fe, 99894a81392fb83aa8886884f70d76b24f048c45, 45c01fae2a2afb30b0ca933e9d7b807acb167d23, 61644aea34c4623d16273ff705f8b8b1ff2d87f0]
        #latest: [61e8ba9015a734ee6c9a12eec4764a1f73d130d3]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
