on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 31f905391fb09c0de99da3d500623bdbd9aa0cc2, 00a97303c2ab27263b18a008a389c3567650123b, 9afbf898ce89f6bcb314ddf03da20abdf0ac79cd, da75ce88bde06bfcef2d454054f43ed430d96b00, 8f987210930e53e6f729d0a84a5fe682aeb74b19, 4784601d726e5b70b6c4e050c77749706536ccf3, fc48e3b206039b4bc7e636f13a8f65d80d93b2d4, 1e964635b64a8e65492751082b39c677f95f39e3, b4beadb39a6cc97a6a628a99752c48123b37db60]
        #latest: [7ebae03696b71705630824c8aa5ccbaf7a240038]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
