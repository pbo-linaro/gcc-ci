on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, c22cf7a7a77bf9245bd0790b21695440208c3aa5, 33b1173361b08919ef9011e335072925d38327df, bfacdd11d992c47771574470987ae8954a5b12fd, 3b9d4258ea755c04f7a7ac1c5e054c098f4bbc93, e3da93d988c0bb5da0eb4f6cdb75a63983ea2b33, c1ebec34788353bf126a1df1c75e1ee2110c8795, 85f0ae3c54ad48e62ca02e61a1aa1ab3c8664142, 7d4c4a4d21aceabf7bae4eec608d2c6f22fc9d76, 7ebae03696b71705630824c8aa5ccbaf7a240038]
        #latest: [aaa9467618a549608dfe837ef6e0f58581bf3b3a]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
