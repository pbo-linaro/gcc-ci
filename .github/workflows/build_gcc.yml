on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 446c19201459ed73bc100b4844e8ecccee5bfe2e, d4ac20b6b426f92d536806ecbb05722570a2e605, b436709f4b1b0d75fa0b5f1c6c6b22f397a767c9, b14efcea1f43289aec4dc5b63752111bfc34c911, 18ba67df507b0c4560200b444f37dce07c6fc803, e64a12f903bd64437bc9267f27dc2ba59b6ad5d5, e50a99a1aa386427050662a52bbedee18d895fc9, e6d40678dd1829a8b24b61aa07dc647ffacd06e6, 0af8582fc71521172e745b8f15b2dc9b83237ad4]
        #latest: [c566f9081067c9328a0f07bcc8bac46dc69d1599]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
