on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, a7eacd8879e422485a0044be37d03a05d3ed262e, 6899eaa70f4fb95ef5b07ae5c073189593f0aa2a, b763d736a10793420945882436d7490385c7dc2d, dd343c42d25d2ab2cc1549c5cf608d7d6b3f0589, b620e1d19f19325afe1d49ee8e2b8f6782a19761, 10da25cd81461c9e18a2b4e6c44a83a74e6c0e2d, fbbf0ec47dbd058ad92d9ad5788fd15527148cb1, 3d75a9b0edf7b76ac45246e4591a9ab437f54825, 04d6111e6e68cb4b7f53027ed35a47241dfc7165]
        #latest: [cdddf7baff74af1542788868d1cfab6dc435f2ef]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
