on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, b1a0e57bc2e630851df8f6c41fe39b86e711beee, 4db1970abbfd503495f8711c6846ed3d68b2e818, d34922c496430cfbfa855f59d45f15de852c2316, d344a64be5b8f985acdccf644e0959a0564a54d5, cc89c429d6fe50544b1282b7ca58a10e524490f4, c9644897bb18bc625fa95f8dc3a6ed52d4c4c57a, d17c95a05210ecf4437eb97261b7f97de4383b8b, 9d1d633099ba51c161209890de6102373660f3ff, 2b6d2e1d5a57ce26c1cf65dfa8f099f2471d2fc7]
        #latest: [1793dec6639c450edf1a1e227faa5ba2c69d4eb8]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
