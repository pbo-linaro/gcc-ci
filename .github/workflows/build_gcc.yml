on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 6e5d6c3f0e83201b5d20a4823d12c0c448b9b876, 96e4e5d27ec49416148b9a22a6c9bb050d562401, b05d874fc527f81c54b50e62f204eb8cd04250d8, ce7f0df47e83b16c3d7bedfbd7966f01d7ce14b1, 55f8b63ab39e1b0571c3dacb6b132827246114ab, 6d1adb5c393814fd800c0fcf153204b6bf9ba417, ff773b9030e443dbea0b4357bd10b480ff39c987, 0680907b3b19273b908c91306932abbf82f85cce, 55a3049525498a4c06e47c21c15f6b3d6eb1be29]
        #latest: [ea0bd46eb863542f965b93a8bb02289ae9dd5ac8]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
