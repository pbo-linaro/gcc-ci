on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, fc2ba3b929aa6457a37604567c01bd97b92ecab1, f7379085ae54bd553d84353ca8ed4ccc2d233f17, 5973c1a788631addcb141fca4f43e75ab8846bf2, 18d87c5b201cbe4ec83f1b9b286ed80f39ad97e4, e275538169881fecbb8a347b71b2130ebf2f3cf5, e569436fe8c121c031a5ede9b1f952bda61e2393, cf311c5324c745e0edde5cd9ed526aea018a169f, 0bda940f99131a73a008506175759608fb801772, e53b368887d41fabea672f530f98da4691fee7d5]
        #latest: [7b2d86cad18998e6e14b6fa74d4a984438ab4b72]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
