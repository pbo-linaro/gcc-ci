on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, e99ee91a959cd29e6776c2262512d424ddfeb027, 24fe3afef257015277591bace5e9f144913a8f53, 9e208648cb9b1a4a52e5402ad9b1722ec690b0e7, a60bafec5a093a19d81000468789c153d0112db8, 5249b87d9aa7ebbdb7e007b223c62db057efb161, c75db430f035043dacd6f3b676e4beb1c93c9033, fadf5f59940ddb895b4907730570dc0bae6ec98a, 79b52e69569552551abbcb8ee1436c819bce3979, 77fbe55f8e68a2fbdff00500faec32f85e8c6d74]
        #latest: [8ea51b5c81fd4ff602eff4ab0e526699b87dde8c]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
