on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, df7f3413385b5e4b90b1da5058b9fae4b891224c, 8ae7e93d60cbfeda0f3930ea85bb3ab5809d623d, b8f4ad50394e137113bde1c91f6160034882ca94, 09777a69afc66fbc102bf462a9a3d6855801e817, eebe4063c1a839a71fd21cb477c9d9a6cc906195, e6c44bae4e3ab962aed6354830d0fdc74dd2c49b, fae1e3bcef1a24321c720ed14011363a7aae06fd, 96065850ce78f2689c2a3c3d4816c7a7043d062b, 16510f1c74d30c2ce4d3134db52199484c3c79e2]
        #latest: [671517fc2e28d7b3f8caa2d2d1b26365285d3d99]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
