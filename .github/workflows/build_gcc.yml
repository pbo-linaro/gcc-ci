on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, a67e0b3efd412aa38fc286210fc32f924800cceb, 06dcc5fdf4d72e4c43beb1a2eb3376c4e252e1f4, 2e08b1d26b82ea19378e052ad30104d4af6b4bf1, 19c93b8286d5ed170c871f99e4beef2e5cf03db4, ceee62dbd989d97e7f23804e130e4f920177c040, 01886152b67c6458ae40cbb2c560dcbb6af1ba95, 458fb22123e64260c60dffe0d9ba3421414e4a01, 53074239fe94101887e2c76750237ed02b83c73c, 547a27922a63b2add2bff6bd6807470df039cc6b]
        #latest: [e53b368887d41fabea672f530f98da4691fee7d5]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
