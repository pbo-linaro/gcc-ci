on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 5141707b5b5dcacde76dd0760f6604451f06ef85, da58dc1a33dea1fea05636003118ef8d50fdb5f7, 6050e07157ef915460a936452f29bd237f795e5f, cd90ba84e1725449c7ca0c3ff6ec4304c1504b9f, f02f9672a57f0272996f570a7e8528f832612405, 3c1cc1190a23f6dc9c5028e1b92e7bbb85651ac3, e58650e6df390e71e7ce880c6bc895a4c4930e25, e615b4fa5f3b2fda29f13db216c59d46837cfb85, 1a02c452a6496c4f75296f0ee5669f0f9befaee6]
        #latest: [973f4088efa74e3c181169b77c22358ae179d4d6]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
