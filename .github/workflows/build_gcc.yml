on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 122f519ceb12a142983dd381d3a42058a11fce22, 3bbc4ca198c61d31e47ab493dbfd5a0eb1d97d31, 215925bccc70eb5f9f9b5ac925115498c3e7990c, 842a8307ca36858529de75ab0532749f2140f900, 5605333c907883486f821088a1ceb22d2bb24aa3, 10c9b9f0ccc340e53e1dfd3e8ca9125f280d8e66, f730dff1738a93b0bd6f4f82cca04689e7f52187, 4689998556b6190ab9333580725f796704e104f1, 9fc94c1562dd69508d7483d236b352270e0d6e3b]
        #latest: [ec43b2ee8f4b92d073d562849022b90221c27f3e]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
