on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 5672275c701f23f448dde625d3c371560d101a94, 2420506ddf844a7f53110c6d6a0ebc957769f0d5, ce1ca503d2baf64633f807c70dcfc1d10e264578, 5c9b490bc281f0819a3c2e199f5e7048694ce6cc, 030786a9680b0206480ebda372c1fb5d2aa19a59, 1678cdd3aac83c3e255e4395c12a9d7dff350a70, c3d5d8bee12e5e18d89db6126fbdd0edde110bf7, 894f558c6e3d4c54de1bef6aa369aa16c72fe687, 6e2ed1e1efb18aa59c1856be20c3b16c753d617c]
        #latest: [032b5f90f2d49a751a99c453be496c0233604390]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
