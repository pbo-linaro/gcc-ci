on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 31361479ae800839dc1d5db0839a7655d263aa2f, 4cb51d2b020d4621ef550fbc658aa1da474b2c96, 9d6fd110c803b545037e0f148d189e6609884399, a2232ff6171ab727fe994c40621831ca409987ae, a64474937c5114b3ef31bc4f5111526665b7dde1, 8576cdbb5a0ec8113860b6cd400be2b88a836489, 848bbbd7735e07fbbdacd3311127b56b0a2b2616, 9946ef210f40985ce8ab7e5faae43b23f08988a8, a7382ca757ed535e7bc74782038104ef5ac59694]
        #latest: [2163af71247b99e8fd707e5d6da83d14456e02a5]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
