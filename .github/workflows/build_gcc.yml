on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 51ba68e38a04b1eecf7ad43c067ce18dc783e722, fb5d51879329252b09415ca2c101867f09f1c741, 9708900e1d53a7569c568102d5bbf56d591ea603, 92986248144ac267fae246cb110021717c4c5764, 69cc35db87d0505418a898a80180f5a843682b35, 1b793f2aa1ad1d64ff2f7508375a407a6d9e7788, 8511a6f5cee5b2b08510a608a89f74098ecfec01, ef24a5b55876c38c73d8d8813df230b515936466, f0f04b256ceee2c8d7a24f0e0fcd8a0894fa48db]
        #latest: [3e0437dc981af591f46234fd2e3aebb3c60028cc]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
