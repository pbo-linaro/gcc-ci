on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 6db677bac0e24228431d1f20f21dc2bc5b6d00a9, 26c4133a625af47e2ccf90d13024138eede8c96c, 467794700e817be5b44b81b3a09b1296bb17c534, 3b0a200eb8c986f17c550b902d5f7ab832b716e2, 8b1e1faa7f2eec13df511fa76d181337efb14f4d, 5db4f84f883513ff062f77c7eca5fdceeb58c825, f0193accb7bbf8240a5beae3ddef7a102d68fb47, 7c10950f544f7972317c848bec284af63981943d, 5a0e099e892d575af167d6a0a7e9ae5f26f439d8]
        #latest: [daae0c5dffa45f5300b9af372e13a6ae3ef56366]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
