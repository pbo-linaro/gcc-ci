on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 3e1ffa7dd111374a5e277b71269f9b6e10b3ec57, ac1a399bf61b04845f5d6fc34e4b7a4db2bc5760, 34a827039fabcf24ce78da25984a1cc8be7ca2c3, 65388b28656d65595bdaf191df85af81c35ca638, 7012a252528233ca3ced5b9230013c50b604da9b, f77a87982db60baa047b489ee4fea58b190503fb, f8a5298c97c460d45e888b123fe1bbcdb49b8ad4, 9935667a69896865b848dfa690f94c9c693a48a3, 3f235afacf384248f5993ab9cd82b6a3f599e010]
        #latest: [c48bedd180672276cc58f379a6346309366b7ea7]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
