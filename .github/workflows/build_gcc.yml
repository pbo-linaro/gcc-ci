on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 92641136c7e1f8a1aa165963b4371536a3854dc4, ae48f884387dee4410643ff04fce1091a699ee13, 408e9c03105b942f0f7abebe916e35c0a9fefaa7, df46f9ee7c7c42449c015417aa1f470da4ca7267, 9a7a79ebafdd29d9d46e1dc2fc930629b434073b, e64909cebf611f469ed0fea3083a567274b340ad, cd773704975f399a8c736a84509dfe2e106412a7, 5444ed27a8139d5d584859321a88cadaafdb1cb0, d88234af9ffa2f51e498dc518ccab8b1c293a148]
        #latest: [3a360b9481fe5a09053872e99a5c18de15e3968f]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
