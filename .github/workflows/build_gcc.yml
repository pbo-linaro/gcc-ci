on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 2952785b1622cab80e95ee3922aac50a113b162a, 1e288d66cb4f0a25a249c0c6dacc2efbf9e44dc8, 5b47923fe512f088a4f1c31466236843c20b7ff9, ce40be7683b18f1162232a48f970946c891dd960, 237564fc08e409f5a0fbd36b54cb8ba32f0efb9d, 007940b753784aa4bd4b6bcd84b1dacb1237c055, 0ebb0a75b40275fe80b8084a2854471437b1f195, aef47d79660c81dedaa3655437e7c6653d00f358, 4459962a83ff5c5b6f3d9f76cb8b6c7a71d300c0]
        #latest: [2b20054948edca024f871a04c38c1d6ccb9c0bce]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
