on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 0610584d0d03dc44ce7403dad7028bdc1acceb7e, 884dec3a424e3e79148bfc29a6c48d6d81ae08ce, f7b2e17682b5139a08f7956226bf7ccbdec88230, 432cdee6a6e28c52dae6b69079db301b9681485b, 58b49a65a3f91f0f6643dc973f46911363148c16, c016d443b814a49fa1f91a08bed12577885f40d9, 47576fa5a866ad0d7ff0112e7d4a9f3dd764f7cc, 79df2b3cafa586e2c3ba357e1448be3ad789d24e, daae0c5dffa45f5300b9af372e13a6ae3ef56366]
        #latest: [6164ec07c64f9ceb40fc5f4f6efb5c0f836fb04f]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
