on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, e112189800b7af8e1c3ef35f8de55c0c58dec740, b1a8cb2fbf63f9579c96e26fdac3ce611461c58b, 71180a9eed367667e7b2c3f6aea1ee1bba15e9b3, ba534efbc00a4d1b45aea57b8eb35c82fe007780, b911f7b85abd3bb96f35d1bd8075a07fd732c71a, 35a4c25ae45adc7439327c8981e63f824c88fa5c, b181ea7289b229b1e5971ccbbdd4f74dbdacefa9, a365e3ed705caf88509acc9237cfba1bffcea797, 1ff234bffdbd1e25636e2a382c8400fb1702ed13]
        #latest: [1ca5d5f84c96bb9a47eeb1bbdeb7ae695f7a759e]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
