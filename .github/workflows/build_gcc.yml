on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, e3a2f3b1931b10afb43893b476e7e27b8ade007e, 0c6338ddb64b8a3fc24470b3040e09ade2f772d8, b18533466c665d1beda7b2564cef515cf3e57aed, b39ecbfec93867596dac5914d332b3e3c790a0fd, b237dcd81a3e84653b2599aae2826fe6221d81a6, cd587fbc1de242a389209974f468dcd8094abb74, 50c549ef3db6276a6a89bead477bea5f74f07adc, 91a86375d9869c8652734ce28dd30c2cdb21656e, 6700154ff7ef970abf305eacbf3f6e0feb19133e]
        #latest: [8e8c56392edb2cdf7d61672dda609bbb6b5941e2]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
