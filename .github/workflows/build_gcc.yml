on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, fbbf0ec47dbd058ad92d9ad5788fd15527148cb1, 3d75a9b0edf7b76ac45246e4591a9ab437f54825, 04d6111e6e68cb4b7f53027ed35a47241dfc7165, 750ac3263c8db064b1d6b3ae33ec6a2036e38bb8, c7c9bbaa1a12c47ccd6e6c13cca6161e59f4fa5c, 6505e466507a6635f9fe1a7ed38d9b6e6cad1737, d429c4ac2d8dbf727a05baa5f7a6169e39246811, 34b0de57741bf3fec3bd013b71b761249095d8e8, 3d59270c819f1e2876b3ca97bcd0c9ac2fbf57f6]
        #latest: [10da25cd81461c9e18a2b4e6c44a83a74e6c0e2d]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
