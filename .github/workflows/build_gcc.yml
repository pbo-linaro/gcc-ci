on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 432120dc19ac0fe7323bdd4678ae26b45e34844e, 4ca2f2030048e0a0121a32ad218c0e3f7a327191, 1f4660d5dba3a6e02aec5f95e8ec7b223ebb9730, f8880772495d2e9e27c29a7874271e1f48a4bcd4, 5c20c980f74d302a4c62590cb3da9b16d4199c37, 22ba7ea9eecbd1a19757d694b84e5a80b811b003, cf58150bea85a633247c77f1989c6389c8eb7974, 00ec3eda2a59af0acb8fad740eef78a654335043, 663c4102a8ad43ec409e04d5ab834d38f161bdb5]
        #latest: [0af8582fc71521172e745b8f15b2dc9b83237ad4]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
