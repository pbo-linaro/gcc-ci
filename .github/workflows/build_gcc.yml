on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 0cecd8278901c32b0326f32105f63ed481bae0c9, 0ee496d5dc105b1925af0366d72c91c4e5712b3c, 11fbade585049d2ff2f51f66a1eb6106deaec619, 3913845305f7a20cb3d0b372492716687d823b98, 90f6b7b56b027c229b519a17ed4bda180b54883d, 68c4066e1afecc1781f387c00c10c9e9d6c02359, f1cec8583431acacb7c6e2eb0a1179ab61d2eecb, 9499b41f40f182eb855c09f07883fe68d7042739, c34f50643daca821f470677ef0c0fb095f0c3165]
        #latest: [16510f1c74d30c2ce4d3134db52199484c3c79e2]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
