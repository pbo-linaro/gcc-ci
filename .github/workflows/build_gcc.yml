on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 57c7cc6abf452d18134cbef6fa1b7c0a2941602e, d10dbce142d1ae4380f33c2887dee91541ebba70, d8a697a658e4621abfb7a294cedadb8ac5b285cd, 1c3a8fbb178236a0a4bd2661a7df071a84b88ca6, 590352852f0be8a46d5b8cc3cfcd92dc423b6208, ba06fbcf5d5d1ed4b4f7cba0f349fc942db776fe, 43115ccccc8df9fcbe89fae0af0b9f45146530e6, efa319175a0d5a2aa2d859d8305be3bf881ad006, 2a53f37997ea9d11e9d25d989d254d53614a883b]
        #latest: [c34f50643daca821f470677ef0c0fb095f0c3165]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
