on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 79d8fb09c626213cdbe020ab13dac70107a8fee1, d3d006d6b08710c42ccede8a041f6a8366a75ffa, 3a5a74d91774dccd4ff7adc8b809781dd25a0f44, 2bde73fa4669dfb34a981aa91b750e5ca8433491, f7084d487286e4c7ba2336b7fa567fc59def4c01, 301e59b864ba32b6e69b906a11352863983c2572, 44ec7404b9a1fb25512bcd262db7e8a1f8248f33, c2ea7f6f36c48483a1a776fb51e04214d4526724, 8ea51b5c81fd4ff602eff4ab0e526699b87dde8c]
        #latest: [5a0e099e892d575af167d6a0a7e9ae5f26f439d8]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
