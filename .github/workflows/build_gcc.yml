on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 007248a2c48ef3c349204899b325bab574019734, e4b769cb0a196b3410b4da5e4415b634b4429399, 4d950fa5dfca0aa526a5d5e72f353b4a46cfb1e4, c37722cc9d57d04e7f74a72295c3fa0df628e2c9, 3ee9c01098a162c9678f4f7bc24fd725e9172cb9, b671794333679413af5974a3a5671ce0f336b1d9, 525e987ae8d2245c2bdd25a2cafd07e8f4bbe0ec, e16397e9963212d8c47fd0cd51544ba373e32172, c566f9081067c9328a0f07bcc8bac46dc69d1599]
        #latest: [d3d751cbac030902014856bbbd310a90b02912af]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
