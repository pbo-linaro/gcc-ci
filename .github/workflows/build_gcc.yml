on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, 917914509f467c0f333575914f5fbb9dc78a39f7, b8934ebd88b50c6aae304eede565f94cb860a3c2, 636e9b41035b55a138065398490ad9007b10fe06, 6ed987d5bc6a11735a3244d6f69d8f3e8879fbc0, 74db136a7cf7505691d409e01f757a5b86f119c9, 253c7343bbb7dcae208ed9342e76b8a5715ad829, 57c5d234792b6bc00f3ef29148733617db8c86d2, 14da235ef4bbab68ca1515aff98f6ec98cbabf65, e07cb0b07d50ffa6b8533c4e0f65b6a4829d2823]
        #latest: [1af4d0e6078e048b88aa5e1547cf1e097952b621]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
