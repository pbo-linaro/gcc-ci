on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build_gcc:
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        revision: [master, d0661bf8c9d432a0c01b2a789569cf64fbffcfaa, e7d105546b7fca4b55959d73c5f60dfb84658f15, 7673702396d4107682b62debdaf904235a35a1a0, 8769b4900fd0a91cc5021a4f86679820b17d4c41, 2aeff9ce08576ad33a29ed6fc6a87e9516b0641f, 9e9ee593cf0507e5b54a556737909a46c6e91319, 48408712cc8cc39cba50c10938a284661ddece87, 7c317571911ee3e9525513634c7e6bc6820dca7c, ec43b2ee8f4b92d073d562849022b90221c27f3e]
        #latest: [3480ea7a05313f30e827f47180549267389387ec]
    permissions:
      contents: write
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: cleanup disk space
        run: ./cleanup_github_runner.sh
      - run: ./build_gcc.sh ${{ matrix.revision }} docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
      - run: ./extract_gcc_artifacts.sh docker.io/pbolinaro/gcc-ci:${{ matrix.revision }} gcc-${{ matrix.revision }}.tar.gz
      - run: gh release upload --clobber build gcc-${{ matrix.revision }}.tar.gz
      # push docker image as latest step, so we can guarantee artifacts are
      # available when image is.
      - run: podman login docker.io -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: podman push docker.io/pbolinaro/gcc-ci:${{ matrix.revision }}
